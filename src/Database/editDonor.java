/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Database;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class editDonor extends javax.swing.JFrame {

    /**
     * Creates new form editDonor
     */
    public editDonor() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        enter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        corporation = new javax.swing.JComboBox();
        editBox = new javax.swing.JTextField();
        person = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        yearlabel = new javax.swing.JLabel();
        year = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel7.setBackground(new java.awt.Color(204, 0, 51));

        jLabel7.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("EDIT DONOR");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel12.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel12.setText("Enter name:");

        enter.setText("ENTER");
        enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enterMouseClicked(evt);
            }
        });
        enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterActionPerformed(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Address", "Contact"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jLabel13.setFont(new java.awt.Font("Segoe UI Semilight", 1, 14)); // NOI18N
        jLabel13.setText("EDIT:");

        corporation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Name", "Address", "Contact", "President" }));
        corporation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                corporationMouseClicked(evt);
            }
        });
        corporation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                corporationActionPerformed(evt);
            }
        });

        editBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBoxActionPerformed(evt);
            }
        });

        person.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Name", "Address", "Contact", "Category", "Batch_Year" }));
        person.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personActionPerformed(evt);
            }
        });

        jButton1.setText("SUBMIT ");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        yearlabel.setFont(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N
        yearlabel.setText("Year:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(yearlabel)
                        .addGap(18, 18, 18)
                        .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(editBox)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(enter, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(5, 5, 5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(person, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(corporation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(corporation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(person, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearlabel)
                    .addComponent(jButton1))
                .addContainerGap(102, Short.MAX_VALUE))
        );

        corporation.setVisible(false);
        person.setVisible(false);
        yearlabel.setVisible(false);
        year.setVisible(false);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterMouseClicked
        // TODO add your handling code here:
        corporation.setVisible(false);
        person.setVisible(false);
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", null);
            stmt = conn.createStatement();

            showAll("name",name.getText());

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_enterMouseClicked

     public void showAll(String column, String name_) throws SQLException{  
        donor_id = new ArrayList();
        int size = 0;
        
        String query = "SELECT * \n" +
                       "FROM annualFund.donor \n" +
                       "WHERE " + column + " LIKE '%" + name_ + "%' and is_active=1";
            
        ResultSet rs = stmt.executeQuery(query);
        while (rs.next()) {
            size+=1;
            donor_id.add(rs.getInt("donor_id"));
            String tmpName = rs.getString("name");
            String tmpAddress = rs.getString("address");
            String tmpContact = rs.getString("contact");

            DefaultTableModel model = (DefaultTableModel) Table.getModel();
            model.setRowCount(size);

            Table.setValueAt(tmpName, size-1, 0);
            Table.setValueAt(tmpAddress, size-1, 1);
            Table.setValueAt(tmpContact, size-1, 2);
        }
    }
    
    private void enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        donor = (int) donor_id.get(Table.getSelectedRow());
        System.out.println(donor);
        donorIs = null;
        String query = "SELECT donor_id FROM annualfund.person WHERE donor_id = " + donor;
        
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", null);
            stmt = conn.createStatement();
            
            ResultSet rs = stmt.executeQuery(query);
            if (rs.next()){
                donorIs = "Person";
                person.setVisible(true);
                corporation.setVisible(false);
            } 
            else {
                donorIs = "Corporation";
                person.setVisible(false);
                corporation.setVisible(true);
            }
        } catch (SQLException ex) {
            Logger.getLogger(editDonor.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(donorIs);
    }//GEN-LAST:event_TableMouseClicked

    private void corporationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_corporationMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_corporationMouseClicked

    private void corporationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_corporationActionPerformed
        // TODO add your handling code here:
        String query = "";
        corpIndex = corporation.getSelectedIndex();
        if (corpIndex == 0){
            query = "SELECT name"
                    + " FROM annualFund.donor "
                    + " WHERE is_Active = 1 and donor_id = " + donor;
        }
        else if (corpIndex == 1){
            query = "SELECT address"
                    + " FROM annualFund.donor "
                    + " WHERE is_Active = 1 and donor_id = " + donor;
        }
        else if (corpIndex == 2){
            query = "SELECT contact"
                    + " FROM annualFund.donor "
                    + " WHERE is_Active = 1 and donor_id = " + donor;
        }
        else if (corpIndex == 3){
            query = "SELECT president"
                    + " FROM annualFund.corporation"
                    + " WHERE donor_id = " + donor;
        }
        
        
        try {
            ResultSet rs = stmt.executeQuery(query);
            if (rs.next()){
                editBox.setText(rs.getString(1));
            }   
        } catch (SQLException ex) {
            Logger.getLogger(editDonor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_corporationActionPerformed

    public String corpQuery(){
        if (corpIndex == 0){
            return  "UPDATE annualfund.donor \n " +
                    "SET name = '" + editBox.getText() + "' \n" +
                    "WHERE donor_id =" + donor ;
        }
        else if (corpIndex == 1){
            return  "UPDATE annualfund.donor \n " +
                    "SET address = '" + editBox.getText() + "' \n" +
                    "WHERE donor_id =" + donor ;
        } 
        else if (corpIndex == 2){
            return  "UPDATE annualfund.donor \n " +
                    "SET contact = '" + editBox.getText() + "' \n" +
                    "WHERE donor_id =" + donor ;
        } 
        else if (corpIndex == 3){
            return  "UPDATE annualfund.corporation \n " +
                    "SET president = '" + editBox.getText() + "' \n" +
                    "WHERE donor_id =" + donor ;
        } 
        return "";
    }
    
    public String personQuery() throws SQLException{
        if  (personIndex== 0){
            return  "UPDATE annualfund.donor \n " +
                    "SET name = '" + editBox.getText() + "' \n" +
                    "WHERE donor_id =" + donor ;
        }
        else if (personIndex == 1){
            return  "UPDATE annualfund.donor \n " +
                    "SET address = '" + editBox.getText() + "' \n" +
                    "WHERE donor_id =" + donor ;
        } 
        else if (personIndex == 2){
            return  "UPDATE annualfund.donor \n " +
                    "SET contact = '" + editBox.getText() + "' \n" +
                    "WHERE donor_id =" + donor ;
        } 
        else if (personIndex == 3){
            String query_;
            ResultSet r;
          
            query_ = "select  a.batch_year, donor_id, name, category \n" +
                     "from annualfund.batch a join annualfund.person on (class_rep = donor_id) \n" +
                        "join annualfund.donor using(donor_id) \n" +
                     "where donor_id =" + donor;
            r = stmt.executeQuery(query_);
            if (r.next()){
                String editTo = editBox.getText();
                System.out.println(editTo);
                if (editTo.equals("Parent") || editTo.equals("Faculty") || editTo.equals("Others")) {
                    query_ = " UPDATE annualfund.batch "
                           + "SET class_rep = null "
                           + "where class_rep = " + donor;
                    x = conn.prepareStatement(query_);
                    x.executeUpdate();
                }
            }
            
            if (editBox.getText().equals("Parent") || editBox.getText().equals("Faculty") || editBox.getText().equals("Others") || editBox.getText().equals("Spouse")){
                System.out.println("here po");
                query_ ="UPDATE annualfund.person \n " +
                        "SET batch_year = null \n" +
                        "WHERE donor_id =" + donor ;
                x = conn.prepareStatement(query_);
                x.executeUpdate();
            }
           
            
            return  "UPDATE annualfund.person \n " +
                    "SET category = '" + editBox.getText() + "' \n" +
                    "WHERE donor_id =" + donor ;
        } 
        
        else if (personIndex == 4){
            String query_ = "UPDATE annualfund.batch "
                        +   "SET class_rep = null "
                        +   "WHERE class_rep = " + donor;
            x = conn.prepareStatement(query_);
            x.executeUpdate();
            
            query_= "SELECT batch_year from annualfund.batch where batch_year =" + Integer.valueOf(editBox.getText());
            ResultSet r = stmt.executeQuery(query_);
            if (!r.next()){
                System.out.println("be here");
                query_ = "INSERT into annualfund.batch (batch_year) VALUES ("+ Integer.valueOf(editBox.getText())+")";
                x = conn.prepareStatement(query_);
                x.executeUpdate();
            }
            
            return    "UPDATE annualfund.person \n"
                    + "SET batch_year = " + Integer.valueOf(editBox.getText())
                    + "\nWHERE donor_id=" +donor;
        }
        return "";
    }
    
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        try {
            String query = "";
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", null);
            stmt = conn.createStatement();
            if (donorIs == "Corporation"){
                query = corpQuery();
            }
            else if (donorIs == "Person"){
                query = personQuery();
            }
            conn.setAutoCommit(false);
            x = conn.prepareStatement(query);
            
            x.executeUpdate();
            
            if(commitTransaction == true){
                conn.commit();
                JOptionPane.showMessageDialog(this, "Successful");
                if (donorIs == "Corporation")
                    showAll((String) corporation.getSelectedItem(),editBox.getText());
                else
                    showAll((String) person.getSelectedItem(),editBox.getText());
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
            try {
                conn.rollback();
            } catch (SQLException ex) { }
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void personActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personActionPerformed
        // TODO add your handling code here:
        //NameAddressContactCategoryBatch_Year
        String query = "";
        personIndex = person.getSelectedIndex();
        if (personIndex == 0){
            query = "SELECT name"
                    + " FROM annualFund.donor "
                    + " WHERE is_Active = 1 and donor_id = " + donor;
        }
        else if (personIndex == 1){
            query = "SELECT address"
                    + " FROM annualFund.donor "
                    + " WHERE is_Active = 1 and donor_id = " + donor;
        }
        else if (personIndex == 2){
            query = "SELECT contact"
                    + " FROM annualFund.donor "
                    + " WHERE is_Active = 1 and donor_id = " + donor;
        }
        else if (personIndex == 3){
            query = "SELECT category"
                    + " FROM annualFund.person"
                    + " WHERE donor_id = " + donor;
        }
        else if (personIndex == 4){
            query = "SELECT batch_year"
                    + " FROM annualFund.person"
                    + " WHERE donor_id = " + donor;
        }
        
        try {
            ResultSet rs = stmt.executeQuery(query);
            if (rs.next()){
                editBox.setText(rs.getString(1));
            }   
        } catch (SQLException ex) {
            Logger.getLogger(editDonor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_personActionPerformed

    private void editBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBoxActionPerformed
        // TODO add your handling code here:
        if (editBox.getText().equals("Student") || editBox.getText().equals("Alumni")){
            year.setVisible(true);
            yearlabel.setVisible(true);
        }
        else {
            year.setVisible(false);
            yearlabel.setVisible(false);
        }
                
    }//GEN-LAST:event_editBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editDonor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editDonor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editDonor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editDonor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editDonor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JComboBox corporation;
    private javax.swing.JTextField editBox;
    private javax.swing.JButton enter;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JComboBox person;
    private javax.swing.JTextField year;
    private javax.swing.JLabel yearlabel;
    // End of variables declaration//GEN-END:variables
    Statement stmt;
    Connection conn;
    PreparedStatement x;
    
    boolean commitTransaction = true;
    
    int corpIndex;
    int personIndex;
    String donorIs;
    
    ArrayList donor_id = new ArrayList();
    int donor=-1;

}
