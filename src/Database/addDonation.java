/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Database;

import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class addDonation extends javax.swing.JFrame {

    /**
     * Creates new form addDonation
     */
    public addDonation() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        enter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        donation = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        pMode = new javax.swing.JComboBox();
        pCreditLabel = new javax.swing.JLabel();
        pCredit = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel7.setBackground(new java.awt.Color(204, 0, 51));

        jLabel6.setFont(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("(FOR EXISTING DONORS ONLY)");

        jLabel7.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("ADD DONATION");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addContainerGap(57, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jLabel12.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel12.setText("Enter name:");

        enter.setText("ENTER");
        enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enterMouseClicked(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Address", "Contact"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        jLabel13.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel13.setText("Enter amount:");

        jLabel20.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel20.setText("Mode of Payment:");

        pMode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Credit Card", "Check" }));
        pMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pModeActionPerformed(evt);
            }
        });

        pCreditLabel.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        pCreditLabel.setText("Credit Card:");

        jButton1.setText("ENTER");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(donation, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pMode, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pCreditLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                            .addComponent(pCredit))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(donation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(pMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pCreditLabel)
                    .addComponent(pCredit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pCreditLabel.hide();
        pCredit.hide();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(8, 8, 8)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(enter, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 336, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterMouseClicked
        // TODO add your handling code here:

        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", null);
            stmt = conn.createStatement();

            showAll();

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_enterMouseClicked
    public void showAll() throws SQLException{  
        donor_id = new ArrayList();
        int size = 0;
        String name_ = name.getText();
        String query = "SELECT * \n" +
                       "FROM annualFund.donor \n" +
                       "WHERE name LIKE '%" + name_ + "%' and is_active=1";
            
        ResultSet rs = stmt.executeQuery(query);
        while (rs.next()) {
            size+=1;
            donor_id.add(rs.getInt("donor_id"));
            String tmpName = rs.getString("name");
            String tmpAddress = rs.getString("address");
            String tmpContact = rs.getString("contact");

            DefaultTableModel model = (DefaultTableModel) Table.getModel();
            model.setRowCount(size);

            Table.setValueAt(tmpName, size-1, 0);
            Table.setValueAt(tmpAddress, size-1, 1);
            Table.setValueAt(tmpContact, size-1, 2);
        }
    }
    
    
    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        donor = (int) donor_id.get(Table.getSelectedRow());
        System.out.println(donor);
        
    }//GEN-LAST:event_TableMouseClicked

    private void pModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pModeActionPerformed
        if (pMode.getSelectedIndex() == 1) {
            pCreditLabel.setVisible(true);
            pCredit.setVisible(true);
        } else {
            pCreditLabel.setVisible(false);
            pCredit.setVisible(false);
        }
    }//GEN-LAST:event_pModeActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        if (jButton1.isEnabled()){
            if (donor!=-1){
                boolean flag = false;
            Float donation_ = Float.valueOf(donation.getText());
            String mode = (String) pMode.getSelectedItem();
            String cCard = null;
            if (mode.equals("Credit Card")){
                if(pCredit.getText().isEmpty()){
                    flag = true;
                    JOptionPane.showMessageDialog(this, "Please enter Credit Card");
                }
                else cCard = pCredit.getText();
            }
            
            if(flag==false){
                
                try {
                    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", null);
                    stmt = conn.createStatement();
                    conn.setAutoCommit(false);
                        String query = "INSERT INTO annualFund.donation (donor_id,amount,date,mode_payment,credit_card) \n" +
                                       "VALUES (?,?,?,?,?)";
                        x = conn.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
                        x.setInt(1, donor);
                        x.setFloat(2, donation_);
                        x.setDate(3, getDate());
                        x.setString(4, mode);
                        x.setString(5, cCard);
                        x.executeUpdate();
                        
                        checkDonorCircle();
                        System.out.println("you here?");
                        updatePledge();
                        System.out.println("here here here");
                        
                    conn.commit();
                    JOptionPane.showMessageDialog(this,"Successful");
                    this.dispose();
                } catch (SQLException ex) {
                    try {
                        System.out.println(ex.getMessage());
                        conn.rollback();
                    } catch (SQLException ex1) {
                       
                    }
                }
            }
            }
            else {
                JOptionPane.showMessageDialog(this,"Please select donor from table");
            }
        }
    }//GEN-LAST:event_jButton1MouseClicked

    public void checkDonorCircle() throws SQLException{
        totalDonation = 0;
        String query = "select sum(amount) as total from annualfund.donation \n"	+	
                        "where donor_id =" + donor ;
        ResultSet rs = stmt.executeQuery(query);
        if (rs.next()){
            totalDonation = rs.getFloat("total");
        }
        System.out.println(totalDonation);
        String circle = DonorCircle();
        if (circle == "null" || totalDonation==0){
            query = "UPDATE annualfund.donor\n" +
                "SET circle = null" +
                "\n WHERE donor_id =" + donor;
        }
        else {
            query = "UPDATE annualfund.donor\n" +
                    "SET circle = '" +circle+ "'" +
                    "\n WHERE donor_id = " + donor;
        }
        x = conn.prepareStatement(query);
        x.executeUpdate();
    }
    
    public String DonorCircle(){
        if (totalDonation >= 50000)
           return "President Circle";
        else if (totalDonation >= 25000 && totalDonation < 50000)
           return "Platinum Circle";
        else if (totalDonation >= 15000 && totalDonation < 25000)
           return "Gold Circle";
        else if (totalDonation >= 10000 && totalDonation < 15000)
           return "Silver Circle";
        else if (totalDonation >= 5000 && totalDonation < 10000)
           return "Bronze Circle";
        else if (totalDonation >= 1000 && totalDonation < 5000)
           return "Copper Circle";
        else if (totalDonation >= 800 && totalDonation < 1000)
           return "Emerald Circle";
        else if (totalDonation >= 600 && totalDonation < 800)
           return "Fluorite Circle";
        else if (totalDonation >= 400 && totalDonation < 600)
            return "Amethyst Circle";
        else if (totalDonation >= 100 && totalDonation < 400)
            return "Peridot Circle";
       
       return "null";
    }
    
    public void updatePledge() throws SQLException{
        String query = "SELECT * \n" +
                       "FROM annualFund.pledge \n" +
                       "WHERE is_complete!=1 and donor_id =" + donor; 
        ResultSet rs = stmt.executeQuery(query);
        while (rs.next()) {
            int id = rs.getInt("donor_id");
            float pledgeAmount = rs.getFloat("amount");
            int numP = rs.getInt("num_payment");
            int numD = rs.getInt("num_donated");
            int isComplete = rs.getInt("is_complete");
            if (id == donor && isComplete != 1){
                query =  "UPDATE annualfund.pledge \n " +
                         "SET num_donated = " + (numD + 1) + 
                         "\n WHERE is_complete!=1 and donor_id =" + donor ;
                x = conn.prepareStatement(query);
                x.executeUpdate();
                
                if (totalDonation()>=pledgeAmount){
                    System.out.println("why you here bitch?");
                    query = "UPDATE annualfund.pledge " +
                            "SET is_complete = " + 1 + 
                            "\n WHERE is_complete!=1 and donor_id =" + donor ;
                    x = conn.prepareStatement(query);
                    x.executeUpdate();
                }
                
            }
        }
    }
    
    public Float totalDonation() throws SQLException{
        Float totalDonation = (float)0;
        Float totalCompletedPledge = (float) 0;
        Statement s = conn.createStatement();
        Statement s2 = conn.createStatement();
        String query = "SELECT SUM(amount) \n" +
                       "FROM annualFund.donation \n" +
                       "WHERE donor_id =" + donor;
        ResultSet rs = s.executeQuery(query);
        if (rs.next()){
            totalDonation=rs.getFloat(1);
        }
        
        query = "SELECT SUM(amount) \n" +
                "FROM annualFund.pledge \n" +
                "WHERE is_complete=1 && donor_id =" + donor;
        rs = s2.executeQuery(query);
        if (rs.next()){
            totalCompletedPledge=rs.getFloat(1);
        }
        
        return totalDonation - totalCompletedPledge;
    }
    
    
    public Date getDate(){
          Calendar calendar = Calendar.getInstance();
          java.sql.Date date = new java.sql.Date(calendar.getTime().getTime());
          return date;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addDonation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addDonation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addDonation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addDonation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addDonation().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JTextField donation;
    private javax.swing.JButton enter;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField pCredit;
    private javax.swing.JLabel pCreditLabel;
    private javax.swing.JComboBox pMode;
    // End of variables declaration//GEN-END:variables
    Statement stmt;
    Connection conn;
    PreparedStatement x;
    
    ArrayList donor_id = new ArrayList();
    int donor=-1;
    float totalDonation;
}
