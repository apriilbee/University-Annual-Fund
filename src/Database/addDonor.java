/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Database;
import java.sql.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;

/**
 *
 * @author johnnyboyromero
 */
public class addDonor extends javax.swing.JFrame {

    /**
     * Creates new form addDonor
     */
    public addDonor() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        b1 = new javax.swing.ButtonGroup();
        b1.add(noMatch);
        b1.add(MatchSpouse);
        b1.add(MatchCorporation);
        
        spousePanel.setVisible(false);
        CorporationPanel.setVisible(false);
        person_Panel.setVisible(true);
       
        pCreditLabel.setVisible(false);
        pCredit.setVisible(false);
       

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pSubmit = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        person_Panel = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        fName = new javax.swing.JTextField();
        lName = new javax.swing.JTextField();
        pAddress = new javax.swing.JTextField();
        category = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        batchLabel = new javax.swing.JLabel();
        batch = new javax.swing.JTextField();
        isbatchRep = new javax.swing.JCheckBox();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        pCreditLabel = new javax.swing.JLabel();
        pMode = new javax.swing.JComboBox();
        pDonated = new javax.swing.JTextField();
        pPledged = new javax.swing.JTextField();
        pPayments = new javax.swing.JTextField();
        pCredit = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        pcontact = new javax.swing.JTextField();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        CorporationPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        corpName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cAddress = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cContact = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        president = new javax.swing.JTextField();
        spousePanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        sName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        sAddress = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        sContact = new javax.swing.JTextField();
        noMatch = new javax.swing.JRadioButton();
        MatchCorporation = new javax.swing.JRadioButton();
        MatchSpouse = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 0, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SOLICITATION LETTER");

        pSubmit.setText("Submit Data");
        pSubmit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pSubmitMouseClicked(evt);
            }
        });
        pSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pSubmitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pSubmit)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        person_Panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Please enter proper information:"));

        jLabel12.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel12.setText("First Name:");

        jLabel13.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel13.setText("Last Name:");

        jLabel14.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel14.setText("Address:");

        category.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Student", "Alumni", "Parent", "Faculty", "Others" }));
        category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel15.setText("Category:");

        batchLabel.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        batchLabel.setText("Batch:");

        batch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batchActionPerformed(evt);
            }
        });

        isbatchRep.setText("Representative");

        jLabel17.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel17.setText("Amount Pledged:");

        jLabel18.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel18.setText("No. of Payments:");

        jLabel19.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel19.setText("Amount Donated:");

        jLabel20.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel20.setText("Mode of Payment:");

        pCreditLabel.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        pCreditLabel.setText("Credit Card:");

        pMode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cash", "Credit Card", "Check" }));
        pMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pModeActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel16.setText("Contact Number:");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel2.setText("Corp. Name:");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel4.setText("Address:");

        jLabel7.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel7.setText("Contact Number:");

        jLabel9.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel9.setText("President:");

        javax.swing.GroupLayout CorporationPanelLayout = new javax.swing.GroupLayout(CorporationPanel);
        CorporationPanel.setLayout(CorporationPanelLayout);
        CorporationPanelLayout.setHorizontalGroup(
            CorporationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CorporationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CorporationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CorporationPanelLayout.createSequentialGroup()
                        .addGroup(CorporationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(CorporationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(corpName, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                            .addComponent(cAddress)
                            .addComponent(cContact)))
                    .addGroup(CorporationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(81, 81, 81)
                        .addComponent(president))))
        );
        CorporationPanelLayout.setVerticalGroup(
            CorporationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CorporationPanelLayout.createSequentialGroup()
                .addGroup(CorporationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(corpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CorporationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CorporationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(CorporationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(president, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel3.setText("Spouse Name:");

        jLabel5.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel5.setText("Address:");

        jLabel8.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabel8.setText("Contact Number:");

        javax.swing.GroupLayout spousePanelLayout = new javax.swing.GroupLayout(spousePanel);
        spousePanel.setLayout(spousePanelLayout);
        spousePanelLayout.setHorizontalGroup(
            spousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(spousePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(spousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addGap(42, 42, 42)
                .addGroup(spousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sAddress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                    .addComponent(sName)
                    .addComponent(sContact))
                .addContainerGap())
        );
        spousePanelLayout.setVerticalGroup(
            spousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(spousePanelLayout.createSequentialGroup()
                .addGroup(spousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(sName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(spousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(sAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(spousePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(sContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(spousePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane2Layout.createSequentialGroup()
                    .addGap(15, 15, 15)
                    .addComponent(CorporationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(spousePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(CorporationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jLayeredPane2.setLayer(CorporationPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(spousePanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        noMatch.setText("No Matching Gift");
        noMatch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                noMatchMouseClicked(evt);
            }
        });

        MatchCorporation.setText("Matching Corporation");
        MatchCorporation.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MatchCorporationMouseClicked(evt);
            }
        });

        MatchSpouse.setText("Matching Spouse");
        MatchSpouse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MatchSpouseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout person_PanelLayout = new javax.swing.GroupLayout(person_Panel);
        person_Panel.setLayout(person_PanelLayout);
        person_PanelLayout.setHorizontalGroup(
            person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(person_PanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(person_PanelLayout.createSequentialGroup()
                        .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15))
                        .addGap(35, 35, 35)
                        .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(isbatchRep)
                                .addComponent(pAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pcontact, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(person_PanelLayout.createSequentialGroup()
                        .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(person_PanelLayout.createSequentialGroup()
                                    .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel18)
                                        .addComponent(jLabel17))
                                    .addGap(36, 36, 36))
                                .addGroup(person_PanelLayout.createSequentialGroup()
                                    .addComponent(jLabel19)
                                    .addGap(38, 38, 38)))
                            .addGroup(person_PanelLayout.createSequentialGroup()
                                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(pCreditLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)))
                        .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(person_PanelLayout.createSequentialGroup()
                                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pCredit, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(person_PanelLayout.createSequentialGroup()
                                        .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(33, 33, 33)
                                        .addComponent(batchLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(batch, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(person_PanelLayout.createSequentialGroup()
                                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pMode, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pDonated, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pPayments, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pPledged, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .addGroup(person_PanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(noMatch)
                .addGap(38, 38, 38)
                .addComponent(MatchCorporation)
                .addGap(37, 37, 37)
                .addComponent(MatchSpouse)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, person_PanelLayout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        person_PanelLayout.setVerticalGroup(
            person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(person_PanelLayout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(pAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pcontact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(batchLabel)
                    .addComponent(batch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isbatchRep)
                    .addComponent(jLabel15))
                .addGap(15, 15, 15)
                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel17)
                    .addComponent(pPledged, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(pPayments, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(pDonated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(pMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pCreditLabel)
                    .addComponent(pCredit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(person_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(noMatch)
                    .addComponent(MatchCorporation)
                    .addComponent(MatchSpouse))
                .addGap(18, 18, 18)
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(person_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(person_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jLayeredPane1.setLayer(person_Panel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void batchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batchActionPerformed

    }//GEN-LAST:event_batchActionPerformed

    private void pSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pSubmitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pSubmitActionPerformed

    private void categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryActionPerformed
        if (category.getSelectedIndex() == 1 || category.getSelectedIndex() == 0) {
            batch.setVisible(true);
            batchLabel.setVisible(true);
            isbatchRep.setVisible(true);
            
        }  else {
            batch.setVisible(false);
            batchLabel.setVisible(false);
            isbatchRep.setVisible(false);
          
        }

    }//GEN-LAST:event_categoryActionPerformed

    private void pModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pModeActionPerformed
        if (pMode.getSelectedIndex() == 1) {
            pCreditLabel.setVisible(true);
            pCredit.setVisible(true);
        } else {
            pCreditLabel.setVisible(false);
            pCredit.setVisible(false);
        }

    }//GEN-LAST:event_pModeActionPerformed

    private void pSubmitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pSubmitMouseClicked
        try {
            if (addToDatabase()){}
                
        } catch (SQLException ex){ }
    }//GEN-LAST:event_pSubmitMouseClicked

    public void insertDonor(String name, String address, String contact) throws SQLException{
       
        
        String query =   "INSERT INTO annualFund.DONOR (name,address,contact)" +
                               "VALUES ('"+name+"','"+address+"','"+contact+"')";
        
        x = conn.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
        x.executeUpdate();
        
       
    }
    
    public void insertPerson() throws SQLException{
        category_ = (String) category.getSelectedItem();
        if(!batch.getText().isEmpty()) //and valid input
            year = Integer.valueOf(batch.getText());
        else
            year = null; //false
        String query =   "INSERT INTO annualFund.person (donor_id,category,batch_year)" +
                               "VALUES ("+donor_id+",'"+category_+"',"+year+")";
        
        x = conn.prepareStatement(query);
        x.executeUpdate();
        
        
    }
    
    public void insertBatch() throws SQLException{
        if (category_ == "Student" || category_ == "Alumni"){
            if (batch.getText().isEmpty()){
                System.out.println("here");
                JOptionPane.showMessageDialog(this, "Please enter valid batch year.");
                flag = true;
                conn.rollback();
            }
            else {
                boolean flag = false;
                String batch_year = null;
                String class_rep = null;

                String query = "SELECT * \n" +
                               "FROM annualFund.batch \n"; 
                //looks at table if year is already listed
                ResultSet rs = stmt.executeQuery(query);
                while (rs.next()) {
                    batch_year = rs.getString("batch_year");
                    class_rep = rs.getString("class_rep");

                    //System.out.println(batch_year + " database");
                    //System.out.println(year + " input");
                    if(Integer.valueOf(batch_year).equals(year)){
                        flag = true;
                        break;
                    }
                }
                //if year is listed
                if(flag==true){
                    if (isbatchRep.isSelected() && class_rep==null){
                        query = "UPDATE annualfund.batch " +
                                "SET class_rep=" + donor_id + " " +
                                "WHERE batch_year=" + year ;
                    }
                    else if (isbatchRep.isSelected() && class_rep!=null) {
                        JOptionPane.showMessageDialog(this,"There is already a class representative in Batch " + batch_year);
                        conn.rollback();
                    }
                    else if (!isbatchRep.isSelected()){
                        query = "";
                    }
                }
                //else if year is not listed
                else {
                    if (isbatchRep.isSelected()){
                        query = "INSERT INTO annualfund.batch (batch_year,class_rep)" +
                                "VALUES ("+ year +","+ donor_id +")";
                    }
                    else if (!isbatchRep.isSelected()){
                    query = "INSERT INTO annualfund.batch (batch_year)" +
                            "VALUES ("+ year +")";
                    }
                }

                if (!query.isEmpty()){
                    x = conn.prepareStatement(query);
                    x.executeUpdate();
                }
            }
        }
        //if category is not student or alumni, nothing happens. 
    }
    
    public Date getDate(){
          Calendar calendar = Calendar.getInstance();
          java.sql.Date date = new java.sql.Date(calendar.getTime().getTime());
          return date;
    }
    
    public void insertPledge() throws SQLException {
        if (!pPledged.getText().isEmpty() && !pPayments.getText().isEmpty()){
            String query = null;
            pledge = Float.valueOf(pPledged.getText());
            payments = Integer.valueOf(pPayments.getText());
        
            query = "INSERT INTO annualFund.pledge (donor_id,amount,date,num_payment,num_donated,is_Complete) \n" +
                "VALUES (?,?,?,?,?,?)";
            
            x = conn.prepareStatement(query);
            x.setInt(1, donor_id);
            x.setFloat(2,pledge);
            x.setDate(3, getDate());
            x.setInt(4, payments);
            x.setInt(5, 0);
            x.setInt(6,0);
            
            x.executeUpdate();
        }
        else if (pPledged.getText().isEmpty() && !pPayments.getText().isEmpty()){
            flag = true;
            conn.rollback();
            JOptionPane.showMessageDialog(this, "Please enter amount of pledge.");
        }
        else if (!pPledged.getText().isEmpty() && pPayments.getText().isEmpty()){
            flag = true;
            conn.rollback();
            JOptionPane.showMessageDialog(this, "Please enter number of payments.");
        }
       
    }
    
    public void insertDonation() throws SQLException{
        boolean flag_ = false;
        if (!pDonated.getText().isEmpty()){
            donation = Float.valueOf(pDonated.getText());
            mode = (String) pMode.getSelectedItem();
            
            if (mode.equals("Credit Card")){
                if(pCredit.getText().isEmpty()){
                    flag = true;
                    conn.rollback();
                    flag_ = true;
                    JOptionPane.showMessageDialog(this, "Please enter Credit Card");
                }
                else cCard = pCredit.getText();
            }
            else {
                cCard = null;
            }
            
            if(flag_ == false){
                String query = "INSERT INTO annualFund.donation (donor_id,amount,date,mode_payment,credit_card)" +
                           "VALUES (?,?,?,?,?)";
            
                x = conn.prepareStatement(query);
                x.setInt(1, donor_id);
                x.setFloat(2, donation);
                x.setDate(3, getDate());
                x.setString(4,mode);
                x.setString(5, cCard);
                x.executeUpdate();
                checkDonorCircle();
                updatePledge();
            }
        }
    }
    public void checkDonorCircle() throws SQLException{
        totalDonation = 0;
        String query = "select sum(amount) as total from annualfund.donation \n"	+	
                        "where donor_id =" + donor_id ;
        ResultSet rs = stmt.executeQuery(query);
        if (rs.next()){
            totalDonation = rs.getFloat("total");
        }
        String circle = DonorCircle();
         if (circle == "null" || totalDonation==0){
            query = "UPDATE annualfund.donor\n" +
                "SET circle = null" +
                "\n WHERE donor_id =" + donor_id;
        }
        else {
             System.out.println(circle);
             System.out.println("mmm?");
            query = "UPDATE annualfund.donor\n" +
                    "SET circle = '" +circle+ "'" +
                    "\n WHERE donor_id =" + donor_id;
        }
        x = conn.prepareStatement(query);
        x.executeUpdate();
        
    }
    
    public String DonorCircle(){
        if (totalDonation >= 50000)
           return "President Circle";
        else if (totalDonation >= 25000 && totalDonation < 50000)
           return "Platinum Circle";
        else if (totalDonation >= 15000 && totalDonation < 25000)
           return "Gold Circle";
        else if (totalDonation >= 10000 && totalDonation < 15000)
           return "Silver Circle";
        else if (totalDonation >= 5000 && totalDonation < 10000)
           return "Bronze Circle";
        else if (totalDonation >= 1000 && totalDonation < 5000)
           return "Copper Circle";
        else if (totalDonation >= 800 && totalDonation < 1000)
           return "Emerald Circle";
        else if (totalDonation >= 600 && totalDonation < 800)
           return "Fluorite Circle";
        else if (totalDonation >= 400 && totalDonation < 600)
            return "Amethyst Circle";
        else if (totalDonation >= 100 && totalDonation < 400)
            return "Peridot Circle";
       
       return "null";
    }
    
    public void updatePledge() throws SQLException{
        String query = "SELECT * \n" +
                       "FROM annualFund.pledge \n" +
                       "WHERE is_complete!=1 and donor_id =" + donor_id; 
        ResultSet rs = stmt.executeQuery(query);
        while (rs.next()) {
            int id = rs.getInt("donor_id");
            float pledgeAmount = rs.getFloat("amount");
            int numP = rs.getInt("num_payment");
            int numD = rs.getInt("num_donated");
            int isComplete = rs.getInt("is_complete");
            if (id == donor_id && isComplete != 1){
                query =  "UPDATE annualfund.pledge \n " +
                         "SET num_donated = " + (numD + 1) + 
                         "\n WHERE is_complete!=1 and  donor_id =" + donor_id ;
                x = conn.prepareStatement(query);
                x.executeUpdate();
                
                
                if (totalDonation()>=pledgeAmount){
                    query = "UPDATE annualfund.pledge " +
                            "SET is_complete = " + 1 + 
                            "\n WHERE is_complete!=1 and donor_id =" + donor_id ;
                    x = conn.prepareStatement(query);
                    x.executeUpdate();
                }
            }
        }
    }
    
    public Float totalDonation() throws SQLException{
        Float totalDonation = (float)0;
        Float totalCompletedPledge = (float) 0;
         
        Statement s = conn.createStatement();
        Statement s2 = conn.createStatement();
        
        String query = "SELECT SUM(amount) \n" +
                       "FROM annualFund.donation \n" +
                       "WHERE donor_id =" + donor_id;
        ResultSet rs = s.executeQuery(query);
        if (rs.next()){
            totalDonation=rs.getFloat(1);
        }
        
        query = "SELECT SUM(amount) \n" +
                "FROM annualFund.pledge \n" +
                "WHERE is_complete=1 && donor_id =" + donor_id;
        rs = s2.executeQuery(query);
        if (rs.next()){
            totalCompletedPledge=rs.getFloat(1);
        }
        
        return totalDonation - totalCompletedPledge;
    }
    
    public void insertCorporation() throws SQLException{
        insertDonor(corpName.getText(),cAddress.getText(),cContact.getText());
        mCorporation = getDonorId();
        String query = "INSERT INTO annualFund.corporation (donor_id,president) \n" +
                       "VALUES (?,?)";
        x = conn.prepareStatement(query);
        x.setInt(1, mCorporation);
        x.setString(2, president.getText());
        x.executeUpdate();
        
        
        pledge = Float.valueOf(pPledged.getText());

        query = "INSERT INTO annualFund.pledge (donor_id,amount,date,num_payment,num_donated,is_Complete) \n" +
            "VALUES (?,?,?,?,?,?)";

        x = conn.prepareStatement(query);
        x.setInt(1, mCorporation);
        x.setFloat(2,pledge);
        x.setDate(3, getDate());
        x.setInt(4, 1);
        x.setInt(5, 0);
        x.setInt(6,0);

        x.executeUpdate();
        
        insertMatches();
    }
    
    public void insertSpouse() throws SQLException {
        insertDonor(sName.getText(),sAddress.getText(),sContact.getText());
        mSpouse = getDonorId();
        insertMatches();
        String query =   "INSERT INTO annualFund.person (donor_id,category,batch_year)" +
                              "VALUES (" +mSpouse+",'Spouse',null)";
        x = conn.prepareStatement(query);
        x.executeUpdate();
        
        pledge = Float.valueOf(pPledged.getText());

        query = "INSERT INTO annualFund.pledge (donor_id,amount,date,num_payment,num_donated,is_Complete) \n" +
            "VALUES (?,?,?,?,?,?)";

        x = conn.prepareStatement(query);
        x.setInt(1, mSpouse);
        x.setFloat(2,pledge);
        x.setDate(3, getDate());
        x.setInt(4, 1);
        x.setInt(5, 0);
        x.setInt(6,0);

        x.executeUpdate();
        
        
    }
    
    public void insertMatches() throws SQLException{
        String query = "INSERT INTO annualFund.matches (ID1,ID2) \n" +
                       "VALUES (?,?)" ;
        x = conn.prepareStatement(query);
        if (MatchCorporation.isSelected())
            x.setInt(1, mCorporation);
        else if (MatchSpouse.isSelected())
            x.setInt(1, mSpouse);
        x.setInt(2, donor_id);
        x.executeUpdate();
    }
    
    public boolean addToDatabase() throws SQLException{
        pname = fName.getText() + " " + lName.getText();
        paddress = pAddress.getText();
        pcontact_ = pcontact.getText();
        donor_id = -1;
        x = null; 
        flag = false;
            
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/", "root", null);
            stmt = conn.createStatement();
            
            conn.setAutoCommit(false);
                insertDonor(pname,paddress,pcontact_);
                donor_id = getDonorId();
                insertPerson();
                insertBatch();
                insertPledge();
                insertDonation();
                if (MatchCorporation.isSelected()){
                    insertCorporation();
                }
                if (MatchSpouse.isSelected()){
                    insertSpouse();
                }
                    
            
            if(flag==false) {
                conn.commit();
                JOptionPane.showMessageDialog(this,"Successful");
                this.dispose();
            }
            
        } catch (SQLException e) {
            System.out.println(e.getMessage());
            conn.rollback();
        }
        return true;
    }
    
    public void registerDriver(){
        try { 
                Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance(); 
            } catch (ClassNotFoundException | java.lang.InstantiationException | java.lang.IllegalAccessException e) { 
                e.printStackTrace(); 
            }
    }
    
    private void noMatchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_noMatchMouseClicked
           CorporationPanel.setVisible(false);
           spousePanel.setVisible(false);
    }//GEN-LAST:event_noMatchMouseClicked

    private void MatchCorporationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MatchCorporationMouseClicked
        // TODO add your handling code here:
        spousePanel.setVisible(false);
        CorporationPanel.setVisible(true);
    }//GEN-LAST:event_MatchCorporationMouseClicked

    private void MatchSpouseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MatchSpouseMouseClicked
        // TODO add your handling code here:
        CorporationPanel.setVisible(false);
        spousePanel.setVisible(true);
    }//GEN-LAST:event_MatchSpouseMouseClicked
   
    public int getDonorId() throws SQLException{
        ResultSet rs = x.getGeneratedKeys();
        int id = 0;
        if (rs.next()){
            id=rs.getInt(1);
        }
        return id;
    }
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addDonor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addDonor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addDonor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addDonor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addDonor().setVisible(true);
            }
        });
    }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CorporationPanel;
    private javax.swing.JRadioButton MatchCorporation;
    private javax.swing.JRadioButton MatchSpouse;
    private javax.swing.JTextField batch;
    private javax.swing.JLabel batchLabel;
    private javax.swing.JTextField cAddress;
    private javax.swing.JTextField cContact;
    private javax.swing.JComboBox category;
    private javax.swing.JTextField corpName;
    private javax.swing.JTextField fName;
    private javax.swing.JCheckBox isbatchRep;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField lName;
    private javax.swing.JRadioButton noMatch;
    private javax.swing.JTextField pAddress;
    private javax.swing.JTextField pCredit;
    private javax.swing.JLabel pCreditLabel;
    private javax.swing.JTextField pDonated;
    private javax.swing.JComboBox pMode;
    private javax.swing.JTextField pPayments;
    private javax.swing.JTextField pPledged;
    private javax.swing.JButton pSubmit;
    private javax.swing.JTextField pcontact;
    private javax.swing.JPanel person_Panel;
    private javax.swing.JTextField president;
    private javax.swing.JTextField sAddress;
    private javax.swing.JTextField sContact;
    private javax.swing.JTextField sName;
    private javax.swing.JPanel spousePanel;
    // End of variables declaration//GEN-END:variables
    Statement stmt;
    Connection conn;
    PreparedStatement x;
    String  pname;
    String  paddress;
    String  pcontact_;
    int donor_id;
    int mCorporation;
    int mSpouse;
    Integer year;
    
   
    
   
    String category_;
    Float pledge;
    int payments;
    Float donation;
    String mode;
    String cCard;
    
    boolean flag;
    float totalDonation;
    private javax.swing.ButtonGroup b1;
}
